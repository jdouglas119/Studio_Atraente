{ ***************************************************
  * Elaborado para: Studio Atraente                 *
  * Modulo     : Cadastro de Clientes               *
  * Analista   : João Douglas                       *
  * Elaboração : João Douglas                       *
  * Ult Alt.   : 09/12/2016                         *
  *************************************************** }

unit un_cadcli;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics, jpeg, Clipbrd, Vcl.Controls, Vcl.Forms,
  Vcl.Dialogs, sSkinManager, Vcl.StdCtrls, sButton, Vcl.Grids, Vcl.DBGrids,
  Vcl.Mask, Vcl.DBCtrls, Vcl.ExtCtrls, Vcl.ComCtrls, sPanel, RxToolEdit,
  RxDBCtrl, DATEUTILS, Vcl.Buttons, Vcl.ExtDlgs;

type
  Tfrm_cadcli = class(TForm)
    Label1: TLabel;
    Label2: TLabel;
    cliente: TDBEdit;
    Label3: TLabel;
    cpf_cli: TDBEdit;
    Label4: TLabel;
    endereco: TDBEdit;
    Label5: TLabel;
    bairro: TDBEdit;
    Label6: TLabel;
    cep: TDBEdit;
    Label8: TLabel;
    telefone: TDBEdit;
    Label9: TLabel;
    celular: TDBEdit;
    Label11: TLabel;
    dtcad: TDBEdit;
    Label12: TLabel;
    email: TDBEdit;
    grid_cli: TDBGrid;
    StatusBar1: TStatusBar;
    sPanel1: TsPanel;
    novo: TsButton;
    editar: TsButton;
    excluir: TsButton;
    nav_cli: TDBNavigator;
    sair: TsButton;
    Label13: TLabel;
    numero: TDBEdit;
    Label14: TLabel;
    combo_sigla: TDBLookupComboBox;
    Label15: TLabel;
    cidade: TDBEdit;
    Edit1: TEdit;
    sButton1: TsButton;
    radio1: TRadioGroup;
    Label16: TLabel;
    end_comp: TDBEdit;
    Label17: TLabel;
    Label18: TLabel;
    Panel1: TPanel;
    Panel2: TPanel;
    dbradio1: TDBRadioGroup;
    cancelar: TsButton;
    gravar: TsButton;
    id_codigo: TDBEdit;
    Label7: TLabel;
    dt_nasc: TDBEdit;
    combo: TDBLookupComboBox;
    Label10: TLabel;
    Panel3: TPanel;
    foto: TDBImage;
    SpeedButton1: TSpeedButton;
    OpenPictureDialog1: TOpenPictureDialog;
    Label19: TLabel;
    Label20: TLabel;
    Label21: TLabel;
    Label22: TLabel;
    Label23: TLabel;
    Label24: TLabel;
    Label25: TLabel;
    Label26: TLabel;
    Label27: TLabel;
    Label28: TLabel;
    procedure novoClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure sairClick(Sender: TObject);
    procedure cancelarClick(Sender: TObject);
    procedure editarClick(Sender: TObject);
    procedure excluirClick(Sender: TObject);
    procedure gravarClick(Sender: TObject);
    procedure FormKeyPress(Sender: TObject; var Key: Char);
    procedure combo_estadoClick(Sender: TObject);
    procedure sButton1Click(Sender: TObject);
    procedure radio1Click(Sender: TObject);
    procedure grid_cliDrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure SpeedButton1Click(Sender: TObject);
    procedure cpf_cliExit(Sender: TObject);
    procedure DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frm_cadcli: Tfrm_cadcli;

implementation

uses un_dtstudio;

{$R *.dfm}

procedure Tfrm_cadcli.cancelarClick(Sender: TObject);
begin // Cancelando registros na tabela
   If Application.Messagebox('Confirma Cancelamento da Digitação de Clientes? ',
   'Confirmação', mb_Iconquestion + Mb_OkCancel + Mb_DefButton1) = IdOk then
   else
   exit;
   dt_studio.tb_cadcli.cancel;
   id_codigo.ReadOnly := true;
   cliente.ReadOnly := true;
   cpf_cli.ReadOnly := true;
   endereco.ReadOnly := true;
   end_comp.ReadOnly := true;
   dbradio1.ReadOnly := true;
   nav_cli.Enabled := true;
   foto.ReadOnly := true;
   bairro.ReadOnly := true;
   cidade.ReadOnly := true;
   dt_nasc.ReadOnly := true;
   cep.ReadOnly := true;
   combo.ReadOnly := true;
   telefone.ReadOnly := true;
   celular.ReadOnly := true;
   dtcad.ReadOnly := true;
   email.ReadOnly := true;
   grid_cli.ReadOnly := true;
   novo.Enabled := true;
   editar.Enabled := true;
   excluir.Enabled := true;
   cancelar.Enabled := false;
   gravar.Enabled := false;
   sair.Enabled := true;
   id_codigo.SetFocus;
end;

procedure Tfrm_cadcli.combo_estadoClick(Sender: TObject);
begin // Focando campo celular
  celular.SetFocus;
end;

procedure Tfrm_cadcli.cpf_cliExit(Sender: TObject);
function Cpf(CPF_Text: string): boolean; //Função para Validar CPF
var n1,n2,n3,n4,n5,n6,n7,n8,n9: integer;
       d1,d2: integer;
       digitado, calculado: string;
begin
   n1:=StrToInt(CPF_Text[1]);
   n2:=StrToInt(CPF_Text[2]);
   n3:=StrToInt(CPF_Text[3]);
   n4:=StrToInt(CPF_Text[5]);
   n5:=StrToInt(CPF_Text[6]);
   n6:=StrToInt(CPF_Text[7]);
   n7:=StrToInt(CPF_Text[9]);
   n8:=StrToInt(CPF_Text[10]);
   n9:=StrToInt(CPF_Text[11]);
   d1:=n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;
   d1:=11-(d1 mod 11);
   if d1>=10 then d1:=0;
   d2:=d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;
   d2:=11-(d2 mod 11);
   if d2>=10 then
   d2:=0;
   calculado:=inttostr(d1)+inttostr(d2);
   digitado:=CPF_Text[13]+CPF_Text[14];
   if calculado=digitado then
      Cpf:=true
   else
      Cpf:=false;
end;
begin //Validando CPF Existente ou Inexistente no Banco
   If dt_studio.tb_cadcliCPF_CLI.Text<>'' Then
   If Cpf(dt_studio.tb_cadcliCPF_CLI.text)=False Then
     begin
         MessageDlg('CPF informado é incorreto!',mtError, [mbOk],0);
         cliente.setfocus;
     end;
     with dt_studio.qry_verificaCpf do
         begin
         	  close;
          	SQL.Clear;
          	SQL.Add('SELECT CPF_CLI FROM CAD_CLI WHERE CPF_CLI = ' + QuotedStr(cpf_cli.Text));
          	Open;
         end;
         if dt_studio.qry_verificaCpf.RecordCount > 0 then
            begin
              	ShowMessage('Cliente com esse CPF já Existe na Base de Dados!');
                cliente.SetFocus;
            end
            else
            endereco.setfocus;
end;

procedure Tfrm_cadcli.DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin //Mudando a situação de acordo que a escolha
  if dt_studio.tb_cadclisituacao.asstring = 'A' then
  begin
    grid_cli.Canvas.Font.Color := clBlack;
    grid_cli.Canvas.Brush.Color := $00E6FFFF;
  end
  else
  begin
    grid_cli.Canvas.Font.Color := clRed;
    grid_cli.Canvas.Brush.Color := clWhite;
  end;
  grid_cli.Canvas.FillRect(Rect);
  grid_cli.Canvas.TextOut(Rect.Left+2,Rect.Top,Column.Field.AsString);
end;

procedure Tfrm_cadcli.editarClick(Sender: TObject);
begin // Editando registros na tabela
   If Application.Messagebox('Confirma Alteração de Clientes? ', 'Confirmação',
   mb_Iconquestion + Mb_OkCancel + Mb_DefButton1) = IdOk then
   else
   exit;
   id_codigo.ReadOnly := false;
   cliente.ReadOnly := false;
   cpf_cli.ReadOnly := false;
   endereco.ReadOnly := false;
   end_comp.ReadOnly := false;
   bairro.ReadOnly := false;
   foto.ReadOnly := false;
   nav_cli.Enabled := false;
   dt_nasc.ReadOnly := false;
   cidade.ReadOnly := false;
   dbradio1.ReadOnly := false;
   cep.ReadOnly := false;
   combo.ReadOnly := false;
   telefone.ReadOnly := false;
   celular.ReadOnly := false;
   dtcad.ReadOnly := true;
   email.ReadOnly := false;
   grid_cli.ReadOnly := false;
   novo.Enabled := false;
   editar.Enabled := false;
   excluir.Enabled := false;
   cancelar.Enabled := true;
   gravar.Enabled := true;
   sair.Enabled := false;
   dt_studio.tb_cadcli.Edit;
   id_codigo.SetFocus;
end;

procedure Tfrm_cadcli.excluirClick(Sender: TObject);
begin // Comandos para excluir registros na tabela//
   If dt_studio.tb_cadcli.RecordCount <> 0 then
   If Application.Messagebox('Confirma Exclusão?', 'Confirmar',
   mb_Iconquestion + MB_YesNo + Mb_DefButton1) = IdYes Then
   begin
      dt_studio.tb_cadcli.Delete;
      id_codigo.SetFocus;
   end;
   If dt_studio.tb_cadcli.RecordCount = 0 then
   showmessage('Nao Existe Registro para Excluir');
end;

procedure Tfrm_cadcli.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
   Case Key of
        VK_F2: //Comando para teclas de atalho//
        begin  //Incluindo informações no banco
           If Application.Messagebox('Confirma Inclusão de Clientes? ', 'Confirmação',
           mb_Iconquestion + Mb_OkCancel + Mb_DefButton1) = IdOk then
           else
           exit;
           id_codigo.ReadOnly := false;
           cliente.ReadOnly := false;
           cpf_cli.ReadOnly := false;
           endereco.ReadOnly := false;
           end_comp.ReadOnly := false;
           dt_nasc.ReadOnly := false;
           cidade.ReadOnly := false;
           foto.ReadOnly:=false;
           bairro.ReadOnly := false;
           cep.ReadOnly := false;
           dbradio1.ReadOnly := false;
           combo_sigla.ReadOnly := false;
           telefone.ReadOnly := false;
           celular.ReadOnly := false;
           dtcad.ReadOnly := true;
           email.ReadOnly := false;
           grid_cli.ReadOnly := false;
           novo.Enabled := false;
           editar.Enabled := false;
           excluir.Enabled := false;
           cancelar.Enabled := true;
           gravar.Enabled := true;
           sair.Enabled := false;
           dt_studio.tb_cadcli.Append;
           dt_studio.tb_cadcliDT_CAD.asstring := DateTimetoStr(now());
           dbradio1.ItemIndex := -0;
           cliente.SetFocus;
        end;
   end;
   Case Key of
        VK_F3: //Comando para teclas de atalho//
        begin  //Alterando informações no banco
            If Application.Messagebox('Confirma Alteração de Clientes? ', 'Confirmação',
            mb_Iconquestion + Mb_OkCancel + Mb_DefButton1) = IdOk then
           else
           exit;
           id_codigo.ReadOnly := false;
           cliente.ReadOnly := false;
           cpf_cli.ReadOnly := false;
           endereco.ReadOnly := false;
           dt_nasc.ReadOnly := false;
           end_comp.ReadOnly := false;
           foto.ReadOnly:=false;
           bairro.ReadOnly := false;
           cidade.ReadOnly := false;
           dbradio1.ReadOnly := false;
           cep.ReadOnly := false;
           combo_sigla.ReadOnly := false;
           telefone.ReadOnly := false;
           celular.ReadOnly := false;
           dtcad.ReadOnly := true;
           email.ReadOnly := false;
           grid_cli.ReadOnly := false;
           novo.Enabled := false;
           editar.Enabled := false;
           excluir.Enabled := false;
           cancelar.Enabled := true;
           gravar.Enabled := true;
           sair.Enabled := false;
           id_codigo.SetFocus;
        end;
   end;
   Case Key of
        VK_F4: //Comando para teclas de atalho//
        begin  //Excluindo informações no banco
            If dt_studio.tb_cadcli.RecordCount <> 0 then
            If Application.Messagebox('Confirma Exclusão?', 'Confirmar',
            mb_Iconquestion + MB_YesNo + Mb_DefButton1) = IdYes Then
            begin
              dt_studio.tb_cadcli.Delete;
              id_codigo.SetFocus;
            end;
            If dt_studio.tb_cadcli.RecordCount = 0 then
            showmessage('Nao Existe Registro para Excluir');
        end;
   end;
   Case Key of
        VK_F5: //Comando para teclas de atalho//
        begin  //Cancelando informações de digitação no banco
            If Application.Messagebox('Confirma Cancelamento da Digitação de Clientes? ',
            'Confirmação', mb_Iconquestion + Mb_OkCancel + Mb_DefButton1) = IdOk then
            else
            exit;
            dt_studio.tb_cadcli.cancel;
            id_codigo.ReadOnly := true;
            cliente.ReadOnly := true;
            cpf_cli.ReadOnly := true;
            endereco.ReadOnly := true;
            end_comp.ReadOnly := true;
            dbradio1.ReadOnly := true;
            dt_nasc.ReadOnly := true;
            foto.ReadOnly:=true;
            bairro.ReadOnly := true;
            cidade.ReadOnly := true;
            cep.ReadOnly := true;
            combo_sigla.ReadOnly := true;
            telefone.ReadOnly := true;
            celular.ReadOnly := true;
            dtcad.ReadOnly := true;
            email.ReadOnly := true;
            grid_cli.ReadOnly := true;
            novo.Enabled := true;
            editar.Enabled := true;
            excluir.Enabled := true;
            cancelar.Enabled := false;
            gravar.Enabled := false;
            sair.Enabled := true;
            id_codigo.SetFocus;
        end;
   end;
   Case Key of
        VK_F6: //Comando para teclas de atalho//
        begin  //Gravando informações no banco
           If Application.Messagebox('Confirma Gravação de Clientes? ', 'Confirmação',
           mb_Iconquestion + Mb_OkCancel + Mb_DefButton1) = IdOk then
           else
           exit;
           if dt_studio.tb_cadcliNOM_CLI.AsString = '' then //Informando campor obrigatórios para preenchimento
           begin
              Application.MessageBox('CAMPO CLIENTE NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
              cliente.SetFocus;
              exit;
           end
           else
           if dt_studio.tb_cadcliCPF_CLI.AsString = '' then
           begin
              Application.MessageBox('CAMPO CPF NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
              cpf_cli.SetFocus;
              exit;
           end
           else
           if dt_studio.tb_cadcliEND_CLI.AsString = '' then
           begin
              Application.MessageBox('CAMPO ENDEREÇO NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
              endereco.SetFocus;
              exit;
           end
           else
           if dt_studio.tb_cadcliNUM_CLI.AsString = '' then
           begin
              Application.MessageBox('CAMPO NÚMERO NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
              numero.SetFocus;
              exit;
           end
           else
           if dt_studio.tb_cadcliBAI_CLI.AsString = '' then
           begin
              Application.MessageBox('CAMPO BAIRRO NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
              bairro.SetFocus;
              exit;
           end
           else
           if dt_studio.tb_cadcliCEP_CLI.AsString = '' then
           begin
              Application.MessageBox('CAMPO CEP NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
              cep.SetFocus;
              exit;
           end
           else
           if dt_studio.tb_cadcliCID_CLI.AsString = '' then
           begin
              Application.MessageBox('CAMPO CIDADE NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
              cidade.SetFocus;
              exit;
           end
           else
           if dt_studio.tb_cadcliEST_CLI.AsString = '' then
           begin
              Application.MessageBox('CAMPO ESTADO NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
              combo.SetFocus;
              exit;
           end
           else
           dt_studio.tb_cadcli.post;
           id_codigo.ReadOnly := true;
           cliente.ReadOnly := true;
           cpf_cli.ReadOnly := true;
           endereco.ReadOnly := true;
           end_comp.ReadOnly := true;
           bairro.ReadOnly := true;
           dt_nasc.ReadOnly := true;
           dbradio1.ReadOnly := true;
           cidade.ReadOnly := true;
           foto.ReadOnly:=true;
           cep.ReadOnly := true;
           combo_sigla.ReadOnly := true;
           telefone.ReadOnly := true;
           celular.ReadOnly := true;
           dtcad.ReadOnly := true;
           email.ReadOnly := true;
           grid_cli.ReadOnly := true;
           novo.Enabled := true;
           editar.Enabled := true;
           excluir.Enabled := true;
           cancelar.Enabled := false;
           gravar.Enabled := false;
           sair.Enabled := true;
           id_codigo.SetFocus;
        end;
   end;
   Case Key of
        VK_F9: //Comando para teclas de atalho//
        begin  //Fechando as Tabelas
           dt_studio.tb_cadcli.close;
           dt_studio.tb_cadestado.close;
           dt_studio.tb_situacao.close;
           close;
        end;
   end;
end;

procedure Tfrm_cadcli.FormKeyPress(Sender: TObject; var Key: Char);
begin // Comandos para a tecla [ENTER]//
  If Key = #13 Then
    Selectnext(ActiveControl, true, true);
end;

procedure Tfrm_cadcli.FormShow(Sender: TObject);
begin // Abrindo as tabelas e ordenando por Nome
   cancelar.Enabled := false;
   gravar.Enabled := false;

   dt_studio.tb_cadcli.close;
   dt_studio.tb_cadcli.sql.clear;
   dt_studio.tb_cadcli.sql.add('SELECT * FROM CAD_CLI ');
   dt_studio.tb_cadcli.sql.add('ORDER BY NOM_CLI ASC');
   dt_studio.tb_cadcli.open;

   dt_studio.tb_cadestado.open;
   dt_studio.tb_situacao.open;
end;

procedure Tfrm_cadcli.gravarClick(Sender: TObject);
begin // Gravando registros na tabela
   If Application.Messagebox('Confirma Gravação de Clientes? ', 'Confirmação',
   mb_Iconquestion + Mb_OkCancel + Mb_DefButton1) = IdOk then
   else
   exit;
   if dt_studio.tb_cadcliNOM_CLI.AsString = '' then //Informando os campos obrigatórios para preenchimento
      begin
         Application.MessageBox('CAMPO CLIENTE NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
         cliente.SetFocus;
         exit;
      end
      else
      if dt_studio.tb_cadcliCPF_CLI.AsString = '' then
      begin
         Application.MessageBox('CAMPO CPF NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
         cpf_cli.SetFocus;
         exit;
      end
      else
      if dt_studio.tb_cadcliEND_CLI.AsString = '' then
      begin
         Application.MessageBox('CAMPO ENDEREÇO NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
         endereco.SetFocus;
         exit;
      end
      else
      if dt_studio.tb_cadcliNUM_CLI.AsString = '' then
      begin
         Application.MessageBox('CAMPO NÚMERO NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
         numero.SetFocus;
         exit;
      end
      else
      if dt_studio.tb_cadcliBAI_CLI.AsString = '' then
      begin
         Application.MessageBox('CAMPO BAIRRO NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
         bairro.SetFocus;
         exit;
      end
      else
      if dt_studio.tb_cadcliCEP_CLI.AsString = '' then
      begin
         Application.MessageBox('CAMPO CEP NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
         cep.SetFocus;
         exit;
      end
      else
      if dt_studio.tb_cadcliCID_CLI.AsString = '' then
      begin
         Application.MessageBox('CAMPO CIDADE NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
         cidade.SetFocus;
         exit;
      end
      else
      if dt_studio.tb_cadcliEST_CLI.AsString = '' then
      begin
         Application.MessageBox('CAMPO ESTADO NÃO PODE SER VAZIO','AVISO',MB_ICONINFORMATION);
         combo.SetFocus;
         exit;
      end
      else
      dt_studio.tb_cadcli.post;
      id_codigo.ReadOnly := true;
      cliente.ReadOnly := true;
      cpf_cli.ReadOnly := true;
      endereco.ReadOnly := true;
      foto.ReadOnly := true;
      nav_cli.Enabled := true;
      end_comp.ReadOnly := true;
      bairro.ReadOnly := true;
      dbradio1.ReadOnly := true;
      dt_nasc.ReadOnly := true;
      cidade.ReadOnly := true;
      cep.ReadOnly := true;
      combo.ReadOnly := true;
      telefone.ReadOnly := true;
      celular.ReadOnly := true;
      dtcad.ReadOnly := true;
      email.ReadOnly := true;
      grid_cli.ReadOnly := true;
      novo.Enabled := true;
      editar.Enabled := true;
      excluir.Enabled := true;
      cancelar.Enabled := false;
      gravar.Enabled := false;
      sair.Enabled := true;
      dt_studio.tb_cadcliDT_ANI.AsString := MonthOf(date);
      id_codigo.SetFocus;
end;

procedure Tfrm_cadcli.grid_cliDrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin //Mudando a cor da linha no grid de acordo com a situação
   if dt_studio.tb_cadclisituacao.asstring = 'A' then
       begin
           grid_cli.Canvas.Font.Color := clBlack;
           grid_cli.Canvas.Brush.Color := $00E6FFFF;
       end
       else
       begin
           grid_cli.Canvas.Font.Color := clRed;
           grid_cli.Canvas.Brush.Color := $00E6FFFF;
       end;
       If odd(dt_studio.tb_cadcli.RecNo) then //Deixando o dbgrid zebrado
       begin
          grid_cli.Canvas.Brush.Color:= clBlack;
          grid_cli.Canvas.Brush.Color:= $00FFF5EC;
       end
       else
       begin
          grid_cli.Canvas.Brush.Color:= clBlack;
          grid_cli.Canvas.Brush.Color:= clWhite;
       end;
       grid_cli.Canvas.FillRect(Rect);
       grid_cli.DefaultDrawDataCell(Rect, grid_cli.columns[datacol].field, State);
end;

procedure Tfrm_cadcli.novoClick(Sender: TObject);
begin // Inserindo registros na tabela
   If Application.Messagebox('Confirma Inclusão de Clientes? ', 'Confirmação',
   mb_Iconquestion + Mb_OkCancel + Mb_DefButton1) = IdOk then
   else
   exit;
   id_codigo.ReadOnly := false;
   cliente.ReadOnly := false;
   cpf_cli.ReadOnly := false;
   endereco.ReadOnly := false;
   end_comp.ReadOnly := false;
   nav_cli.Enabled := false;
   cidade.ReadOnly := false;
   bairro.ReadOnly := false;
   cep.ReadOnly := false;
   foto.ReadOnly := false;
   dbradio1.ReadOnly := false;
   combo.ReadOnly := false;
   telefone.ReadOnly := false;
   celular.ReadOnly := false;
   dt_nasc.ReadOnly := false;
   dtcad.ReadOnly := true;
   email.ReadOnly := false;
   grid_cli.ReadOnly := false;
   novo.Enabled := false;
   editar.Enabled := false;
   excluir.Enabled := false;
   cancelar.Enabled := true;
   gravar.Enabled := true;
   sair.Enabled := false;
   dt_studio.tb_cadcli.Append;
   dt_studio.tb_cadcliDT_CAD.asstring := DateTimetoStr(now());
   dbradio1.ItemIndex := -0;
   cliente.SetFocus;
end;

procedure Tfrm_cadcli.radio1Click(Sender: TObject);
begin // Focando edit1
  Edit1.SetFocus;
end;

procedure Tfrm_cadcli.sairClick(Sender: TObject);
begin // Fechando as tabelas
  dt_studio.tb_cadcli.close;
  dt_studio.tb_cadestado.close;
  dt_studio.tb_situacao.close;
  close;
end;

procedure Tfrm_cadcli.sButton1Click(Sender: TObject);
var
  Sql: string; // Pesquisando registros na tabela
begin
  dt_studio.tb_cadcli.close;
  dt_studio.tb_cadcli.Sql.Clear;
  dt_studio.tb_cadcli.Sql.Add('select * from CAD_CLI');

  if (radio1.ItemIndex = 0) then
    Sql := 'where CPF_CLI like ' + QuotedStr('%' + Edit1.Text + '%')
  else if (radio1.ItemIndex = 1) then
    Sql := 'where NOM_CLI like ' + QuotedStr('%' + Edit1.Text + '%');

  dt_studio.tb_cadcli.Sql.Add(Sql);
  dt_studio.tb_cadcli.Sql.Add('order by NOM_CLI');
  dt_studio.tb_cadcli.open;
end;

procedure Tfrm_cadcli.SpeedButton1Click(Sender: TObject);
var
   jpg: TJpegImage;
begin//Chamando o local onde está o arquivo das fotos
   if OpenPictureDialog1.Execute then
      begin
         jpg := TJpegImage.Create;
         jpg.LoadFromFile(OpenPictureDialog1.FileName);
         clipboard.Assign(jpg);
         foto.PasteFromClipboard;
         jpg.Free;
      end;
end;

end.


