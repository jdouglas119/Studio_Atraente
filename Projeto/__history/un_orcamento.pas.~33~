{ ***************************************************
  * Elaborado para: Studio Atraente                 *
  * Modulo     : Movimentação de Serviços           *
  * Analista   : João Douglas                       *
  * Elaboração : João Douglas                       *
  * Ult Alt.   : 08/12/2016                         *
  *************************************************** }

unit un_orcamento;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs,
  Vcl.Grids, Vcl.DBGrids, Vcl.StdCtrls, Vcl.Buttons, Vcl.DBCtrls,
  Vcl.ExtCtrls, Vcl.Mask, Data.DB, IBX.IBCustomDataSet, IBX.IBQuery,
  Data.Win.ADODB, sButton, Vcl.ComCtrls, sPanel, frxClass, frxExportPDF,
  Vcl.Samples.Gauges, sLabel;

type
  Tfrm_servico = class(TForm)
    Timer1: TTimer;
    query_cli: TADOQuery;
    query_comanda: TADOQuery;
    query_atend: TADOQuery;
    query_atendID_FUNC: TIntegerField;
    query_atendNOM_FUNC: TStringField;
    query_atendEND_FUNC: TStringField;
    query_atendBAI_FUNC: TStringField;
    query_atendCEP_FUNC: TStringField;
    query_atendCID_FUNC: TStringField;
    query_atendAREA_FUNC: TStringField;
    query_atendCOMISSAO_FUNC: TBCDField;
    query_atendDT_CAD: TDateTimeField;
    query_atendSITUACAO: TStringField;
    query_atendNUM_FUNC: TBCDField;
    query_atendUF: TStringField;
    query_atendESTADO: TStringField;
    query_atendCOMP_FUNC: TStringField;
    query_atendTEL_FIXO: TStringField;
    query_atendCEL_FUNC: TStringField;
    query_atendCOD_EST: TIntegerField;
    StatusBar1: TStatusBar;
    Panel1: TPanel;
    query_comandaNOM_SERV: TStringField;
    query_comandaQUANT: TBCDField;
    query_comandaVR_UNIT: TFloatField;
    query_comandaTOT_ITEM: TFloatField;
    query_comandaVR_PARCIAL: TFloatField;
    query_comandaDESCONTO: TFloatField;
    query_comandaPERC_DESC: TFloatField;
    query_comandaTOT_SERV: TFloatField;
    query_comandaID_CODSERV: TIntegerField;
    query_comandaPERC_COMISSAO: TFloatField;
    query_comandaVR_COMISSAO: TFloatField;
    query_comandaID_SERV: TIntegerField;
    query_comandaOBS_SERV: TMemoField;
    query_comandaTOTAL_SERV: TFloatField;
    query_comandaTOTAL_COMISS: TFloatField;
    query_comandaDATA_SERV: TDateTimeField;
    query_comandaSITUACAO: TStringField;
    sPanel1: TsPanel;
    es_novo: TsButton;
    es_editar: TsButton;
    es_excluir: TsButton;
    es_ok: TsButton;
    es_cancel: TsButton;
    sPanel2: TsPanel;
    Label1: TLabel;
    id_serv: TDBEdit;
    Label2: TLabel;
    data: TDBEdit;
    Label25: TLabel;
    obs: TDBMemo;
    Label3: TLabel;
    id_cli: TDBEdit;
    nom_cli: TDBEdit;
    radio: TRadioGroup;
    Edit1: TEdit;
    sPanel3: TsPanel;
    Label6: TLabel;
    id_cod: TDBEdit;
    nom_serv: TDBEdit;
    Label7: TLabel;
    quant: TDBEdit;
    Label8: TLabel;
    vr_unit: TDBEdit;
    Label9: TLabel;
    vr_item: TDBEdit;
    Label10: TLabel;
    perc_comis: TDBEdit;
    Label15: TLabel;
    vr_comiss: TDBEdit;
    Label16: TLabel;
    perc: TDBEdit;
    Label5: TLabel;
    vr_desc: TDBEdit;
    Label11: TLabel;
    vr_total: TDBEdit;
    Label12: TLabel;
    DBGrid1: TDBGrid;
    Label19: TLabel;
    Panel5: TPanel;
    Label20: TLabel;
    Label23: TLabel;
    Panel4: TPanel;
    Label24: TLabel;
    Label21: TLabel;
    Label22: TLabel;
    sPanel4: TsPanel;
    sButton8: TsButton;
    sButton10: TsButton;
    sButton11: TsButton;
    sButton12: TsButton;
    sButton13: TsButton;
    DBNavigator1: TDBNavigator;
    es_sair: TsButton;
    query_comandaDESCONTO5: TFloatField;
    query_comandaPERC_DESC3: TFloatField;
    Label4: TLabel;
    combo: TDBLookupComboBox;
    situacao: TLabel;
    sit: TDBEdit;
    Panel2: TPanel;
    DBGrid2: TDBGrid;
    query_prod: TADOQuery;
    query_prodNOME_TIPO: TStringField;
    query_prodDT_CAD: TDateTimeField;
    query_prodPERC_SERVICO: TBCDField;
    query_prodVR_SERVICO: TBCDField;
    query_prodSITUACAO: TStringField;
    query_prodID_TIPO: TAutoIncField;
    query_prodCUSTO: TFloatField;
    query_prodTIPO: TStringField;
    Label13: TLabel;
    Panel6: TPanel;
    Label14: TLabel;
    query_prodESTOQUE: TBCDField;
    SpeedButton1: TSpeedButton;
    sButton1: TsButton;
    sButton2: TsButton;
    Edit2: TEdit;
    sButton3: TsButton;
    sLabel1: TsLabel;
    sButton4: TsButton;
    Label17: TLabel;
    niver: TDBEdit;
    sLabel2: TsLabel;
    query_cliNOM_CLI: TStringField;
    query_cliDT_ANI: TDateTimeField;
    procedure FormShow(Sender: TObject);
    procedure id_cliExit(Sender: TObject);
    procedure FormKeyPress(Sender: TObject; var Key: Char);
    procedure id_codExit(Sender: TObject);
    procedure quantExit(Sender: TObject);
    procedure obsEnter(Sender: TObject);
    procedure radioClick(Sender: TObject);
    procedure percExit(Sender: TObject);
    procedure nav_servClick(Sender: TObject; Button: TNavigateBtn);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure grid_servDrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure vr_descExit(Sender: TObject);
    procedure DBNavigator1Click(Sender: TObject; Button: TNavigateBtn);
    procedure atend1Click(Sender: TObject);
    procedure sButton2Click(Sender: TObject);
    procedure sButton12Click(Sender: TObject);
    procedure sButton13Click(Sender: TObject);
    procedure sButton11Click(Sender: TObject);
    procedure es_novoClick(Sender: TObject);
    procedure es_editarClick(Sender: TObject);
    procedure es_excluirClick(Sender: TObject);
    procedure es_okClick(Sender: TObject);
    procedure es_cancelClick(Sender: TObject);
    procedure es_sairClick(Sender: TObject);
    procedure sButton8Click(Sender: TObject);
    procedure DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure comboClick(Sender: TObject);
    procedure obsExit(Sender: TObject);
    procedure sButton10Click(Sender: TObject);
    procedure DBGrid2DrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure DBGrid2CellClick(Column: TColumn);
    procedure SpeedButton1Click(Sender: TObject);
    procedure sButton1Click(Sender: TObject);
    procedure sButton3Click(Sender: TObject);
    procedure sButton4Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frm_servico: Tfrm_servico;

implementation

uses un_dtstudio, un_pesq_tipo, un_pesq_cli, un_pesq_atend, un_relatorios,
  un_pesq_prod, un_rec_caixa, un_aniversario, DateUtils;

{$R *.dfm}

procedure Tfrm_servico.id_cliExit(Sender: TObject);
begin
  // Comando para filtrar por codigo do cliente
  if query_cli.Locate('ID_CLI', id_cli.text, [loPartialKey]) and
    (Trim(query_cli.FieldByName('NOM_CLI').AsString) <> '') then
  begin
    nom_cli.text := query_cli.FieldByName('NOM_CLI').AsString;
    obs.SetFocus;
  end;
end;

procedure Tfrm_servico.id_codExit(Sender: TObject);
begin //Filtrando informações pelo código do serviço
   if query_comanda.Locate('ID_CODSERV', id_cod.text, [loPartialKey]) and
    (Trim(query_comanda.FieldByName('NOM_SERV').AsString) <> '') then
     begin
        nom_serv.text := query_comanda.FieldByName('NOM_SERV').AsString;
        quant.SetFocus;
     end;
end;

procedure Tfrm_servico.obsEnter(Sender: TObject);
begin //Deixando os botões visiveis
  es_sair.Enabled := true;
  es_novo.Enabled := true;
  es_editar.Enabled := true;
  es_excluir.Enabled := true;
  es_cancel.Enabled := true;
end;

procedure Tfrm_servico.obsExit(Sender: TObject);
begin //Focando no botão
   es_ok.SetFocus;
end;

procedure Tfrm_servico.percExit(Sender: TObject);
begin //Informando o desconto no valor
   dt_studio.tb_comandas.Edit;
   dt_studio.tb_comandasDESCONTO.value := dt_studio.tb_comandasTOT_ITEM.value *
   (dt_studio.tb_comandasPERC_DESC.value) / 100;
   vr_desc.SetFocus;
end;

procedure Tfrm_servico.quantExit(Sender: TObject);
var Hoje, Mes: TDate;
begin //Multiplicando o valor pela quantidade e informando que é pra baixar a quant. no estoque de acordo com a situação P
    dt_studio.tb_comandas.Edit;
    dt_studio.tb_cadtiposerv.Edit;
    vr_desc.Readonly := false;
    dt_studio.tb_comandasTOT_ITEM.value := dt_studio.tb_comandasVR_UNIT.value *
    dt_studio.tb_comandasQUANT.value;
    if dt_studio.tb_cadtiposervTIPO.AsString = 'P' then
        begin
           dt_studio.tb_cadtiposervESTOQUE.Value := dt_studio.tb_cadtiposervESTOQUE.Value -
           dt_studio.tb_comandasQUANT.Value;
           dt_studio.tb_cadtiposerv.post;
           dt_studio.tb_cadtiposerv.Next;
           perc.SetFocus;
        end;
        if Mes = Hoje then
            begin
               dt_studio.tb_comandasPERC_DESC.Value := 10;
               perc.SetFocus;
            end;
end;

procedure Tfrm_servico.radioClick(Sender: TObject);
begin //Focando o edit
   Edit2.SetFocus;
end;

procedure Tfrm_servico.sButton10Click(Sender: TObject);
var
   totalgeral: Currency;
   subtotal: Currency;
   desconto: Currency;
begin
  // excluindo dados na tabela de itens
   If Application.MessageBox('Confirma Exclusão?', 'Confirmar',
   Mb_IconQuestion + MB_YesNo + MB_DefButton1) = IdYes Then
   dt_studio.tb_comandas.delete;
   totalgeral := 0;
   desconto := 0;
   subtotal := 0;
   dt_studio.tb_comandas.DisableControls;
   try
     while not dt_studio.tb_comandas.eof do
     begin
        subtotal := subtotal + dt_studio.tb_comandas.FieldByName('TOT_ITEM').AsCurrency;
        totalgeral := totalgeral + dt_studio.tb_comandas.FieldByName('TOT_SERV').AsCurrency;
        desconto := desconto + dt_studio.tb_comandas.FieldByName('DESCONTO').AsCurrency;
        dt_studio.tb_comandas.next;
     end;
     dt_studio.tb_comandas.EnableControls;
     Label20.Caption := FormatFloat('#,###,###,##0.00', subtotal);
     Label22.Caption := FormatFloat('#,###,###,##0.00', totalgeral);
     Label24.Caption := FormatFloat('#,###,###,##0.00', desconto);
   finally
   end;
end;

procedure Tfrm_servico.sButton11Click(Sender: TObject);
begin
// Chamando o layout do relatório e indexando por vencimento//
  frm_relatorios.rel_comandas.loadfromfile('c:\projeto_studio atraente\relatorios\rel_comanda_cli.fr3');
  frm_relatorios.rel_comandas.ShowReport();
end;

procedure Tfrm_servico.sButton12Click(Sender: TObject);
begin // chamando a tela de pesquisa de produtos
  frm_pesq_tipo.cod := 1;
  frm_pesq_tipo.ShowModal;
  quant.SetFocus;
end;

procedure Tfrm_servico.sButton13Click(Sender: TObject);
var
   Sql: string; // Pesquisando registros na tabela
   totalgeral: Currency;
   subtotal: Currency;
   desconto: Currency;
begin
  dt_studio.tb_movservico.close;
  dt_studio.tb_movservico.Sql.Clear;
  dt_studio.tb_movservico.Sql.Add('select * from CAB_SERV');
  if (radio.ItemIndex = 0) then
  Sql := 'where ID_SERV like ' + QuotedStr('%' + Edit1.text + '%')
  else if (radio.ItemIndex = 1) then
  Sql := 'where NOM_CLI like ' + QuotedStr('%' + Edit1.text + '%');
  dt_studio.tb_movservico.Sql.Add(Sql);
  dt_studio.tb_movservico.Sql.Add('order by ID_SERV');
  dt_studio.tb_movservico.open;

  edit1.SetFocus;
  totalgeral := 0;
  desconto := 0;
  subtotal := 0;
  dt_studio.tb_comandas.DisableControls;
  try
     while not dt_studio.tb_comandas.eof do
     begin
        subtotal := subtotal + dt_studio.tb_comandas.FieldByName('TOT_ITEM').AsCurrency;
        totalgeral := totalgeral + dt_studio.tb_comandas.FieldByName('TOT_SERV').AsCurrency;
        desconto := desconto + dt_studio.tb_comandas.FieldByName('DESCONTO').AsCurrency;
        dt_studio.tb_comandas.next;
     end;
     dt_studio.tb_comandas.EnableControls;
     Label20.Caption := FormatFloat('#,###,###,##0.00', subtotal);
     Label22.Caption := FormatFloat('#,###,###,##0.00', totalgeral);
     Label24.Caption := FormatFloat('#,###,###,##0.00', desconto);
   finally
   end;
end;

procedure Tfrm_servico.sButton1Click(Sender: TObject);
begin //Validando os campos
   dt_studio.tb_comandas.edit;
   id_cod.ReadOnly := true;
   nom_serv.ReadOnly := true;
   quant.ReadOnly := false;
   combo.ReadOnly := false;
   vr_unit.ReadOnly := false;
   vr_item.ReadOnly := true;
   perc_comis.ReadOnly := false;
   perc.ReadOnly := false;
   vr_desc.ReadOnly := false;
   vr_comiss.ReadOnly := true;
   dbgrid1.ReadOnly := false;
   vr_unit.SetFocus;
end;

procedure Tfrm_servico.es_sairClick(Sender: TObject);
begin
  // fechando a tabela de dados
    dt_studio.tb_comandas.close;
    dt_studio.tb_movservico.close;
    dt_studio.tb_cadatend.close;
    dt_studio.tb_movcaixa.close;
    dt_studio.tb_formapag.close;
    dt_studio.tb_cadcli.close;
    dt_studio.tb_cadtiposerv.close;
    query_comanda.close;
    query_cli.close;
    query_prod.Close;
    query_atend.close;
    close;
end;

procedure Tfrm_servico.sButton2Click(Sender: TObject);
begin //Chamando a tela de recebimentos para finalização da comanda
   frm_rec_caixa.show;
end;

procedure Tfrm_servico.sButton3Click(Sender: TObject);
var
   Sql: string; // Pesquisando registros na tabela
begin
   dt_studio.tb_movservico.close;
   dt_studio.tb_movservico.Sql.Clear;
   dt_studio.tb_movservico.Sql.Add('select * from CAB_SERV');
   Sql := 'where SITUACAO like ' + QuotedStr('%' + Edit2.text + '%');
   dt_studio.tb_movservico.Sql.Add(Sql);
   dt_studio.tb_movservico.Sql.Add('order by ID_SERV');
   dt_studio.tb_movservico.open;
end;

procedure Tfrm_servico.sButton4Click(Sender: TObject);
begin
   frm_aniversariantes.show;
   frm_aniversariantes.memo.clear;
end;

procedure Tfrm_servico.sButton8Click(Sender: TObject);
begin
   // inserindo dados na tabela de itens
   if dt_studio.tb_movservicoSITUACAO.Value = 'FINALIZADO' then
      begin
         showmessage('COMANDA JÁ FINALIZADA !!');
         exit;
      end
   else
   dt_studio.tb_comandas.edit;
   dt_studio.tb_comandas.append;
   dt_studio.tb_comandasID_CODSERV.asstring := '';
   dt_studio.tb_comandasNOM_SERV.asstring := '';
   dt_studio.tb_comandasATENDENTE.asstring := '';
   dt_studio.tb_comandasQUANT.asstring := '1';
   dt_studio.tb_comandasVR_UNIT.asstring := '';
   dt_studio.tb_comandasTOT_ITEM.asstring := '';
   dt_studio.tb_comandasPERC_DESC.asstring := '';
   dt_studio.tb_comandasPERC_COMISSAO.asstring := '';
   dt_studio.tb_comandasVR_COMISSAO.asstring := '';
   dt_studio.tb_comandasPERC_DESC.asstring := '';
   dt_studio.tb_comandasDESCONTO.asstring := '';
   dt_studio.tb_comandasTOT_SERV.asstring := '';
   id_cod.ReadOnly := true;
   nom_serv.ReadOnly := true;
   quant.ReadOnly := false;
   combo.ReadOnly := false;
   vr_unit.ReadOnly := false;
   vr_item.ReadOnly := true;
   perc_comis.ReadOnly := false;
   perc.ReadOnly := false;
   vr_desc.ReadOnly := false;
   vr_comiss.ReadOnly := true;
   dbgrid1.ReadOnly := false;
   frm_pesq_tipo.cod := 1;
   combo.setfocus;
   dt_studio.tb_comandasDATA_SERV.asstring := DatetoStr(Date);
end;

procedure Tfrm_servico.SpeedButton1Click(Sender: TObject);
begin
  // chamando a tela de pesquisa de clientes
  frm_pesq_cli.cod := 1;
  obs.SetFocus;
  frm_pesq_cli.showmodal;
end;

procedure Tfrm_servico.es_novoClick(Sender: TObject);
begin
   // inluindo registros na base de dados//
   if dt_studio.tb_movcaixaDT_CAIXA.asstring = '' then
     begin
        showmessage('ATENÇÃO! ABERTURA DO CAIXA AINDA NÃO FOI REALIZADA...!');
        exit;
     end
   else
   If Application.MessageBox('Confirma Inclusão de Serviços? ', 'Confirmação',
   Mb_IconQuestion + Mb_OkCancel + MB_DefButton1) = IdOk then
   else
   exit;
   id_serv.Readonly := true;
   Data.Readonly := true;
   id_cli.Readonly := false;
   nom_cli.Readonly := true;
   combo.ReadOnly := false;
   niver.ReadOnly := false;
   obs.Readonly := false;
   sit.ReadOnly := false;
   id_cod.ReadOnly := true;
   nom_serv.ReadOnly := true;
   quant.ReadOnly := false;
   vr_unit.ReadOnly := false;
   vr_item.ReadOnly := false;
   perc_comis.ReadOnly := false;
   vr_comiss.ReadOnly := false;
   perc.ReadOnly := false;
   vr_desc.ReadOnly := false;
   vr_total.ReadOnly := false;
   es_novo.Enabled := false;
   es_editar.Enabled := false;
   es_excluir.Enabled := false;
   es_cancel.Enabled := true;
   es_ok.Enabled := true;
   es_sair.Enabled := false;
   dt_studio.tb_movservico.Append;
   dt_studio.tb_movservicoDATA_SERV.asstring := DatetoStr(Date);
   dt_studio.tb_movservicoSITUACAO.AsString := 'ABERTA';
   id_cli.SetFocus;
   frm_servico.sLabel2.Visible := false;
end;

procedure Tfrm_servico.es_editarClick(Sender: TObject);
begin
   // alterando registros na base de dados
   If Application.MessageBox('Confirma Alteração de Serviços? ', 'Confirmação',
   Mb_IconQuestion + Mb_OkCancel + MB_DefButton1) = IdOk then
   else
   exit;
   id_serv.Readonly := true;
   Data.Readonly := true;
   id_cli.Readonly := false;
   combo.ReadOnly := false;
   sit.ReadOnly := false;
   niver.ReadOnly := false;
   nom_cli.Readonly := true;
   obs.Readonly := false;
   id_cod.ReadOnly := true;
   nom_serv.ReadOnly := false;
   quant.ReadOnly := false;
   vr_unit.ReadOnly := false;
   vr_item.ReadOnly := false;
   perc_comis.ReadOnly := false;
   vr_comiss.ReadOnly := false;
   perc.ReadOnly := false;
   vr_desc.ReadOnly := false;
   vr_total.ReadOnly := false;
   es_novo.Enabled := false;
   es_editar.Enabled := false;
   es_excluir.Enabled := false;
   es_cancel.Enabled := true;
   es_ok.Enabled := true;
   es_sair.Enabled := false;
   dt_studio.tb_movservico.edit;
end;

procedure Tfrm_servico.es_excluirClick(Sender: TObject);
begin
  // excluindo registros na base de dados
  If dt_studio.tb_movservico.RecordCount <> 0 then
    If Application.MessageBox('Confirma Exclusão?', 'Confirmar',
      Mb_IconQuestion + MB_YesNo + MB_DefButton1) = IdYes Then
    begin
      dt_studio.tb_movservico.Delete;
      id_serv.SetFocus;
    end;
end;

procedure Tfrm_servico.es_okClick(Sender: TObject);
var Hoje, Mes: TDate; // A variavel Hoje salva a data atual e a Mes salva a data que consta no seu DBEdit.
begin
   // Grava registros na digitação na base de dados//
   If Application.MessageBox('Confirma Gravação de Serviços? ',
   'Confirmação', Mb_IconQuestion + Mb_OkCancel + MB_DefButton1) = IdOk then
   else
   exit;
   id_cod.ReadOnly := true;
   nom_serv.ReadOnly := true;
   quant.ReadOnly := true;
   niver.ReadOnly := true;
   combo.ReadOnly := true;
   sit.ReadOnly := true;
   vr_unit.ReadOnly := true;
   vr_item.ReadOnly := true;
   perc_comis.ReadOnly := true;
   vr_comiss.ReadOnly := true;
   perc.ReadOnly := true;
   vr_desc.ReadOnly := true;
   vr_total.ReadOnly := true;
   es_novo.Enabled := true;
   es_editar.Enabled := true;
   es_excluir.Enabled := true;
   es_cancel.Enabled := false;
   es_ok.Enabled := false;
   es_sair.Enabled := true;
   dt_studio.tb_movservico.post;
   frm_servico.slabel2.Visible := true;
   sbutton8.SetFocus;
   Hoje := MonthOf(now);
   Mes := MonthOf(strtodate(niver.text));
   if Mes = Hoje then
     begin
        frm_servico.slabel2.Visible := true;
        frm_servico.slabel2.caption := 'Cliente Aniversariante no MÊS tem Desconto !';
     end
     else
     if Mes <> hoje then
     begin
        frm_servico.slabel2.Visible := false;
        sbutton8.setfocus;
     end;
end;

procedure Tfrm_servico.es_cancelClick(Sender: TObject);
begin
   // cancela registros na digitação na base de dados//
   If Application.MessageBox('Confirma Cancelamento na Digitação de Serviços? ',
   'Confirmação', Mb_IconQuestion + Mb_OkCancel + MB_DefButton1) = IdOk then
   else
   exit;
   id_serv.Readonly := true;
   Data.Readonly := true;
   id_cli.Readonly := true;
   nom_cli.Readonly := true;
   niver.ReadOnly := true;
   sit.ReadOnly := true;
   combo.ReadOnly := true;
   obs.Readonly := true;
   id_cod.ReadOnly := true;
   nom_serv.ReadOnly := true;
   quant.ReadOnly := true;
   vr_unit.ReadOnly := true;
   vr_item.ReadOnly := true;
   perc_comis.ReadOnly := true;
   vr_comiss.ReadOnly := true;
   perc.ReadOnly := true;
   vr_desc.ReadOnly := true;
   vr_total.ReadOnly := true;
   es_novo.Enabled := true;
   es_editar.Enabled := true;
   es_excluir.Enabled := true;
   es_cancel.Enabled := false;
   es_ok.Enabled := false;
   es_sair.Enabled := true;
   dt_studio.tb_movservico.cancel;
   id_serv.SetFocus;
   sLabel2.Visible := false;
end;

procedure Tfrm_servico.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
   Case Key of
        VK_F2: //Comando para teclas de atalho//
        begin
           // inluindo registros na base de dados//
           if dt_studio.tb_movcaixaDT_CAIXA.asstring = '' then
           begin
             showmessage('ATENÇÃO! ABERTURA DO CAIXA AINDA NÃO FOI REALIZADA...!');
           exit;
           end
           else
           If Application.MessageBox('Confirma Inclusão de Serviços? ', 'Confirmação',
           Mb_IconQuestion + Mb_OkCancel + MB_DefButton1) = IdOk then
           else
           exit;
           id_serv.Readonly := true;
           Data.Readonly := true;
           id_cli.Readonly := true;
           nom_cli.Readonly := true;
           obs.Readonly := false;
           id_cod.ReadOnly := true;
           nom_serv.ReadOnly := false;
           quant.ReadOnly := false;
           vr_unit.ReadOnly := false;
           vr_item.ReadOnly := false;
           perc_comis.ReadOnly := false;
           vr_comiss.ReadOnly := false;
           perc.ReadOnly := false;
           vr_desc.ReadOnly := false;
           vr_total.ReadOnly := false;
           es_novo.Enabled := false;
           es_editar.Enabled := false;
           es_excluir.Enabled := false;
           es_cancel.Enabled := true;
           es_ok.Enabled := true;
           es_sair.Enabled := false;
           dt_studio.tb_movservico.Append;
           dt_studio.tb_movservicoDATA_SERV.asstring := DatetoStr(Date);
           id_cli.SetFocus;
           frm_servico.sLabel2.Visible := false;
        end;
  end;
  Case Key of
        VK_F3: //Comando para teclas de atalho//
        begin
           // alterando registros na base de dados
           If Application.MessageBox('Confirma Alteração de Serviços? ', 'Confirmação',
           Mb_IconQuestion + Mb_OkCancel + MB_DefButton1) = IdOk then
           else
           exit;
           id_serv.Readonly := true;
           Data.Readonly := true;
           id_cli.Readonly := true;
           nom_cli.Readonly := true;
           obs.Readonly := false;
           id_cod.ReadOnly := true;
           nom_serv.ReadOnly := false;
           quant.ReadOnly := false;
           vr_unit.ReadOnly := false;
           vr_item.ReadOnly := false;
           perc_comis.ReadOnly := false;
           vr_comiss.ReadOnly := false;
           perc.ReadOnly := false;
           vr_desc.ReadOnly := false;
           vr_total.ReadOnly := false;
           es_novo.Enabled := false;
           es_editar.Enabled := false;
           es_excluir.Enabled := false;
           es_cancel.Enabled := true;
           es_ok.Enabled := true;
           es_sair.Enabled := false;
           dt_studio.tb_movservico.edit;
           id_serv.SetFocus;
        end;
  end;
  Case Key of
       VK_F4: //Comando para teclas de atalho//
       begin
           // excluindo registros na base de dados
           If dt_studio.tb_movservico.RecordCount <> 0 then
           If Application.MessageBox('Confirma Exclusão?', 'Confirmar',
           Mb_IconQuestion + MB_YesNo + MB_DefButton1) = IdYes Then
           begin
              dt_studio.tb_movservico.Delete;
              id_serv.SetFocus;
           end;
       end;
  end;
  Case Key of
       VK_F5: //Comando para teclas de atalho//
       begin
          // cancela registros na digitação na base de dados//
          If Application.MessageBox('Confirma Cancelamento na Digitação de Serviços? ',
          'Confirmação', Mb_IconQuestion + Mb_OkCancel + MB_DefButton1) = IdOk then
           else
           exit;
           id_serv.Readonly := true;
           Data.Readonly := true;
           id_cli.Readonly := true;
           nom_cli.Readonly := true;
           obs.Readonly := true;
           id_cod.ReadOnly := true;
           nom_serv.ReadOnly := true;
           quant.ReadOnly := true;
           vr_unit.ReadOnly := true;
           vr_item.ReadOnly := true;
           perc_comis.ReadOnly := true;
           vr_comiss.ReadOnly := true;
           perc.ReadOnly := true;
           vr_desc.ReadOnly := true;
           vr_total.ReadOnly := true;
           es_novo.Enabled := true;
           es_editar.Enabled := true;
           es_excluir.Enabled := true;
           es_cancel.Enabled := false;
           es_ok.Enabled := false;
           es_sair.Enabled := true;
           dt_studio.tb_movservico.cancel;
           id_serv.SetFocus;
       end;
  end;
  Case Key of
       VK_F6: //Comando para teclas de atalho//
       begin
          // Grava registros na digitação na base de dados//
          If Application.MessageBox('Confirma Gravação de Serviços? ',
          'Confirmação', Mb_IconQuestion + Mb_OkCancel + MB_DefButton1) = IdOk then
          else
          exit;
          id_cod.ReadOnly := true;
          nom_serv.ReadOnly := true;
          quant.ReadOnly := true;
          vr_unit.ReadOnly := true;
          vr_item.ReadOnly := true;
          perc_comis.ReadOnly := true;
          vr_comiss.ReadOnly := true;
          perc.ReadOnly := true;
          vr_desc.ReadOnly := true;
          vr_total.ReadOnly := true;
          es_novo.Enabled := true;
          es_editar.Enabled := true;
          es_excluir.Enabled := true;
          es_cancel.Enabled := false;
          es_ok.Enabled := false;
          es_sair.Enabled := true;
          dt_studio.tb_comandas.Edit;
          dt_studio.tb_comandasSITUACAO.AsString := 'ABERTA';
          frm_servico.slabel2.Visible := true;
          dt_studio.tb_movservico.post;
       end;
  end;
  Case Key of
       VK_F9: //Comando para teclas de atalho//
       begin
          // fechando a tabela de dados
          dt_studio.tb_movservico.close;
          dt_studio.tb_comandas.close;
          dt_studio.tb_cadatend.close;
          dt_studio.tb_formapag.close;
          dt_studio.tb_cadcli.close;
          dt_studio.tb_cadtiposerv.close;
          query_comanda.close;
          query_cli.close;
          query_atend.close;
          close;
       end;
  end;
end;

procedure Tfrm_servico.FormKeyPress(Sender: TObject; var Key: Char);
begin
  // usando a tecla [ENTER] para entrar com os dados
  If Key = #13 Then
    Selectnext(ActiveControl, true, true);
end;

procedure Tfrm_servico.FormShow(Sender: TObject);
var
   Sql: string; // Pesquisando registros na tabela
   totalgeral: Currency;
   subtotal: Currency;
   desconto: Currency;
   quantlinhas : integer;
begin
   frm_servico.sLabel2.Visible := false;
   es_novo.Enabled := true;
   es_editar.Enabled := true;
   es_excluir.Enabled := true;
   es_cancel.Enabled := false;
   es_ok.Enabled := false;
   dt_studio.tb_formapag.open;
   dt_studio.tb_comandas.open;
   dt_studio.tb_movservico.open;
   dt_studio.tb_movcaixa.open;
   dt_studio.tb_cadatend.open;
   dt_studio.tb_cadtiposerv.open;
   dt_studio.tb_cadcli.open;
   query_comanda.open;
   query_prod.open;
   query_cli.open;
   query_atend.open;
   totalgeral := 0;
   desconto := 0;
   subtotal := 0;
   quantlinhas := 0;
   dt_studio.tb_comandas.DisableControls;
   try
     while not dt_studio.tb_comandas.eof do
     begin
        subtotal := subtotal + dt_studio.tb_comandas.FieldByName('TOT_ITEM').AsCurrency;
        totalgeral := totalgeral + dt_studio.tb_comandas.FieldByName('TOT_SERV').AsCurrency;
        desconto := desconto + dt_studio.tb_comandas.FieldByName('DESCONTO').AsCurrency;
        quantlinhas := dbgrid1.DataSource.DataSet.RecordCount;
        dt_studio.tb_comandas.next;
     end;
     dt_studio.tb_comandas.EnableControls;
     Label20.Caption := FormatFloat('#,###,###,##0.00', subtotal);
     Label22.Caption := FormatFloat('#,###,###,##0.00', totalgeral);
     Label24.Caption := FormatFloat('#,###,###,##0.00', desconto);
     Label14.Caption := FormatFloat('#,0', quantlinhas);
   finally
   end;
end;

procedure Tfrm_servico.atend1Click(Sender: TObject);
begin //Focando no campo código
   id_cod.SetFocus;
end;

procedure Tfrm_servico.comboClick(Sender: TObject);
begin //Chamando a tela de produtos e focando na quant
   frm_pesq_tipo.showmodal;
   quant.SetFocus;
end;

procedure Tfrm_servico.DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin
    If odd(dt_studio.tb_comandas.RecNo) then //Deixando o dbgrid zebrado
       begin
          dbgrid1.Canvas.Font.Color:= clBlack;
          dbgrid1.Canvas.Brush.Color:= $00FFF5EC;
       end
       else
       begin
          dbgrid1.Canvas.Font.Color:= clBlack;
          dbgrid1.Canvas.Brush.Color:= clWhite;
       end;
       dbgrid1.Canvas.FillRect(Rect);
       dbgrid1.DefaultDrawDataCell(Rect, dbgrid1.columns[DataCol].Field, State);
end;

procedure Tfrm_servico.DBGrid2CellClick(Column: TColumn);
var
   totalgeral: Currency;
   subtotal: Currency;
   desconto: Currency;
   quantlinhas : integer;
begin //Informando valores na tela
   totalgeral := 0;
   desconto := 0;
   subtotal := 0;
   quantlinhas := 0;
   dt_studio.tb_comandas.DisableControls;
   try
     while not dt_studio.tb_comandas.eof do
     begin
        subtotal := subtotal + dt_studio.tb_comandas.FieldByName('TOT_ITEM').AsCurrency;
        totalgeral := totalgeral + dt_studio.tb_comandas.FieldByName('TOT_SERV').AsCurrency;
        desconto := desconto + dt_studio.tb_comandas.FieldByName('DESCONTO').AsCurrency;
        quantlinhas := dbgrid1.DataSource.DataSet.RecordCount;
        dt_studio.tb_comandas.next;
     end;
     dt_studio.tb_comandas.EnableControls;
     Label20.Caption := FormatFloat('#,###,###,##0.00', subtotal);
     Label22.Caption := FormatFloat('#,###,###,##0.00', totalgeral);
     Label24.Caption := FormatFloat('#,###,###,##0.00', desconto);
     Label14.Caption := FormatFloat('#,0', quantlinhas);
   finally
   end;
end;

procedure Tfrm_servico.DBGrid2DrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin //Informando o tipo de situação da comanda
    if dt_studio.tb_movservicoSITUACAO.asstring = 'FINALIZADO' then
       dbgrid2.Canvas.Font.Color := clRed;
    If odd(dt_studio.tb_movservico.RecNo) then  //Deixando o dbgrid zebrado
       begin
          dbgrid2.Canvas.Brush.Color:= clBlack;
          dbgrid2.Canvas.Brush.Color:= $00FFF5EC;
       end
       else
       begin
          dbgrid2.Canvas.Brush.Color:= clBlack;
          dbgrid2.Canvas.Brush.Color:= clWhite;
       end;
       dbgrid2.Canvas.FillRect(Rect);
       dbgrid2.DefaultDrawDataCell(Rect, dbgrid2.columns[DataCol].Field, State);
end;

procedure Tfrm_servico.DBNavigator1Click(Sender: TObject; Button: TNavigateBtn);
var
   totalgeral: Currency;
   subtotal: Currency;
   desconto: Currency;
   quantlinhas : integer;
begin //Informando valores na tela
   totalgeral := 0;
   desconto := 0;
   subtotal := 0;
   quantlinhas := 0;
   dt_studio.tb_comandas.DisableControls;
   try
     while not dt_studio.tb_comandas.eof do
        begin
           if (dt_studio.tb_movservicoDATA_SERV.asstring = dt_studio.tb_movservicoDT_ANI.asstring) then
              begin
                 frm_servico.slabel2.Visible := true;
                 frm_servico.slabel2.caption := 'Cliente Aniversariante no MÊS tem Desconto !';
              end
              else
              frm_servico.slabel2.Visible := false;
              subtotal := subtotal + dt_studio.tb_comandas.FieldByName('TOT_ITEM').AsCurrency;
              totalgeral := totalgeral + dt_studio.tb_comandas.FieldByName('TOT_SERV').AsCurrency;
              desconto := desconto + dt_studio.tb_comandas.FieldByName('DESCONTO').AsCurrency;
              quantlinhas := dbgrid1.DataSource.DataSet.RecordCount;
              dt_studio.tb_comandas.next;
        end;
        dt_studio.tb_comandas.EnableControls;
        Label20.Caption := FormatFloat('#,###,###,##0.00', subtotal);
        Label22.Caption := FormatFloat('#,###,###,##0.00', totalgeral);
        Label24.Caption := FormatFloat('#,###,###,##0.00', desconto);
        Label14.Caption := FormatFloat('#,0', quantlinhas);
   finally
   end;
end;

procedure Tfrm_servico.grid_servDrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin //Recebendo a informação de finalizado no grid e mudando a cor da fonte para vermelho
   if (Column.Field.FieldName = 'ID_SERV') then
   dbgrid1.Canvas.Brush.Color := clSkyBlue;
   if dt_studio.tb_comandasSITUACAO.AsString = 'FINALIZADO' then
   dbgrid1.Canvas.Font.Color := clRed;
   dbgrid1.Canvas.FillRect(Rect);
   dbgrid1.DefaultDrawDataCell(Rect, dbgrid1.columns[DataCol].Field, State);
end;

procedure Tfrm_servico.nav_servClick(Sender: TObject; Button: TNavigateBtn);
begin //Posicionando o registro no inicio da tabela
  dt_studio.tb_comandas.first;
end;

procedure Tfrm_servico.vr_descExit(Sender: TObject);
var
   totalgeral: Currency;
   subtotal: Currency;
   desconto: Currency;
   quantlinhas: Integer;
begin //Informando valores na tela
   dt_studio.tb_comandas.edit;
   dt_studio.tb_comandasTOT_ITEM.value := dt_studio.tb_comandasVR_UNIT.value * dt_studio.tb_comandasQUANT.value;
   dt_studio.tb_comandasTOT_SERV.value := dt_studio.tb_comandasTOT_ITEM.value - dt_studio.tb_comandasDESCONTO.value;
   dt_studio.tb_comandasPERC_DESC.value := dt_studio.tb_comandasDESCONTO.value / dt_studio.tb_comandasTOT_ITEM.value * 100;
   dt_studio.tb_comandasVR_COMISSAO.value := dt_studio.tb_comandasTOT_SERV.value * dt_studio.tb_comandasPERC_COMISSAO.value / 100;
   dt_studio.tb_comandas.insert;
   dbgrid1.DataSource.DataSet.first;
   sbutton8.setfocus;
   totalgeral := 0;
   quantlinhas := 0;
   desconto := 0;
   subtotal := 0;
   dt_studio.tb_comandas.DisableControls;
   try
     while not dt_studio.tb_comandas.eof do
     begin
        subtotal := subtotal + dt_studio.tb_comandas.FieldByName('TOT_ITEM').AsCurrency;
        totalgeral := totalgeral + dt_studio.tb_comandas.FieldByName('TOT_SERV').AsCurrency;
        desconto := desconto + dt_studio.tb_comandas.FieldByName('DESCONTO').AsCurrency;
        quantlinhas := dbgrid1.DataSource.DataSet.RecordCount;
        dt_studio.tb_comandas.next;
     end;
     dt_studio.tb_comandas.EnableControls;
     Label20.Caption := FormatFloat('#,###,###,##0.00', subtotal);
     Label22.Caption := FormatFloat('#,###,###,##0.00', totalgeral);
     Label24.Caption := FormatFloat('#,###,###,##0.00', desconto);
     Label14.Caption := FormatFloat('#,0', quantlinhas);
   finally
   end;
end;

end.




